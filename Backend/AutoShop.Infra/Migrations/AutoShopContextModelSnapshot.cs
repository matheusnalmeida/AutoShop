// <auto-generated />
using System;
using AutoShop.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoShop.Infra.Migrations
{
    [DbContext(typeof(AutoShopContext))]
    partial class AutoShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoShop.Domain.Entities.Operacao", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IdVeiculo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IdVendedor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("QuantidadeDeParcelas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVeiculo");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.ProdutoOperacao", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdOperacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IdProduto")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("IdOperacao");

                    b.HasIndex("IdProduto");

                    b.ToTable("ProdutoOperacao");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Veiculo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("ImagemURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Operacao", b =>
                {
                    b.HasOne("AutoShop.Domain.Entities.Usuario", "Cliente")
                        .WithMany("OperacoesCriadas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AutoShop.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Operacoes")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoShop.Domain.Entities.Usuario", "Vendedor")
                        .WithMany("OperacoesAprovadas")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "ValorFinanciado", b1 =>
                        {
                            b1.Property<string>("OperacaoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("ValorFinanciado");

                            b1.HasKey("OperacaoId");

                            b1.ToTable("Operacao");

                            b1.WithOwner()
                                .HasForeignKey("OperacaoId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "ValorTotal", b1 =>
                        {
                            b1.Property<string>("OperacaoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("ValorTotal");

                            b1.HasKey("OperacaoId");

                            b1.ToTable("Operacao");

                            b1.WithOwner()
                                .HasForeignKey("OperacaoId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "ValorVeiculo", b1 =>
                        {
                            b1.Property<string>("OperacaoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("ValorVeiculo");

                            b1.HasKey("OperacaoId");

                            b1.ToTable("Operacao");

                            b1.WithOwner()
                                .HasForeignKey("OperacaoId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("ValorFinanciado")
                        .IsRequired();

                    b.Navigation("ValorTotal")
                        .IsRequired();

                    b.Navigation("ValorVeiculo")
                        .IsRequired();

                    b.Navigation("Veiculo");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Produto", b =>
                {
                    b.OwnsOne("AutoShop.Domain.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<string>("ProdutoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("nvarchar(120)")
                                .HasColumnName("Nome");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "Preco", b1 =>
                        {
                            b1.Property<string>("ProdutoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("Preco");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Nome")
                        .IsRequired();

                    b.Navigation("Preco")
                        .IsRequired();
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.ProdutoOperacao", b =>
                {
                    b.HasOne("AutoShop.Domain.Entities.Operacao", "Operacao")
                        .WithMany("ProdutoOperacoes")
                        .HasForeignKey("IdOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoShop.Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoOperacoes")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "Preco", b1 =>
                        {
                            b1.Property<string>("ProdutoOperacaoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("Preco");

                            b1.HasKey("ProdutoOperacaoId");

                            b1.ToTable("ProdutoOperacao");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoOperacaoId");
                        });

                    b.Navigation("Operacao");

                    b.Navigation("Preco")
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("AutoShop.Domain.ValueObjects.CPF", "Cpf", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("nvarchar(120)")
                                .HasColumnName("Cpf");

                            b1.Property<int>("TempId1")
                                .HasColumnType("int");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("nvarchar(120)")
                                .HasColumnName("Email");

                            b1.Property<int>("TempId1")
                                .HasColumnType("int");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Senha", "Senha", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<int>("TempId1")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("Senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Telefone");

                            b1.Property<int>("TempId1")
                                .HasColumnType("int");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Senha")
                        .IsRequired();

                    b.Navigation("Telefone")
                        .IsRequired();
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Veiculo", b =>
                {
                    b.OwnsOne("AutoShop.Domain.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<string>("VeiculoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("nvarchar(120)")
                                .HasColumnName("Nome");

                            b1.HasKey("VeiculoId");

                            b1.ToTable("Veiculo");

                            b1.WithOwner()
                                .HasForeignKey("VeiculoId");
                        });

                    b.OwnsOne("AutoShop.Domain.ValueObjects.Preco", "Preco", b1 =>
                        {
                            b1.Property<string>("VeiculoId")
                                .HasColumnType("nvarchar(40)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("Preco");

                            b1.HasKey("VeiculoId");

                            b1.ToTable("Veiculo");

                            b1.WithOwner()
                                .HasForeignKey("VeiculoId");
                        });

                    b.Navigation("Nome")
                        .IsRequired();

                    b.Navigation("Preco")
                        .IsRequired();
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Operacao", b =>
                {
                    b.Navigation("ProdutoOperacoes");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Produto", b =>
                {
                    b.Navigation("ProdutoOperacoes");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("OperacoesAprovadas");

                    b.Navigation("OperacoesCriadas");
                });

            modelBuilder.Entity("AutoShop.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Operacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
